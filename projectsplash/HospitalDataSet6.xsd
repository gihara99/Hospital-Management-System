<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="HospitalDataSet6" targetNamespace="http://tempuri.org/HospitalDataSet6.xsd" xmlns:mstns="http://tempuri.org/HospitalDataSet6.xsd" xmlns="http://tempuri.org/HospitalDataSet6.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="HospitalConnectionString1" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="HospitalConnectionString1 (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.projectsplash.Properties.Settings.GlobalReference.Default.HospitalConnectionString1" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DoctorsTableAdapter" GeneratorDataComponentClassName="DoctorsTableAdapter" Name="Doctors" UserDataComponentName="DoctorsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="HospitalConnectionString1 (Settings)" DbObjectName="Hospital.dbo.Doctors" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Doctors] WHERE (([Doctor_Name] = @Original_Doctor_Name) AND ((@IsNull_Specialisty = 1 AND [Specialisty] IS NULL) OR ([Specialisty] = @Original_Specialisty)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Doctor_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Doctor_Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Specialisty" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Specialisty" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Specialisty" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Specialisty" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Doctors] ([Doctor_Name], [Specialisty]) VALUES (@Doctor_Name, @Specialisty);
SELECT Doctor_Name, Specialisty FROM Doctors WHERE (Doctor_Name = @Doctor_Name)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Doctor_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Doctor_Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Specialisty" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Specialisty" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Doctor_Name, Specialisty FROM dbo.Doctors</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Doctors] SET [Doctor_Name] = @Doctor_Name, [Specialisty] = @Specialisty WHERE (([Doctor_Name] = @Original_Doctor_Name) AND ((@IsNull_Specialisty = 1 AND [Specialisty] IS NULL) OR ([Specialisty] = @Original_Specialisty)));
SELECT Doctor_Name, Specialisty FROM Doctors WHERE (Doctor_Name = @Doctor_Name)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Doctor_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Doctor_Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Specialisty" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Specialisty" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Doctor_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Doctor_Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Specialisty" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Specialisty" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Specialisty" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Specialisty" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Doctor_Name" DataSetColumn="Doctor_Name" />
              <Mapping SourceColumn="Specialisty" DataSetColumn="Specialisty" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="HospitalDataSet6" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="HospitalDataSet6" msprop:Generator_UserDSName="HospitalDataSet6">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Doctors" msprop:Generator_TableClassName="DoctorsDataTable" msprop:Generator_TableVarName="tableDoctors" msprop:Generator_TablePropName="Doctors" msprop:Generator_RowDeletingName="DoctorsRowDeleting" msprop:Generator_RowChangingName="DoctorsRowChanging" msprop:Generator_RowEvHandlerName="DoctorsRowChangeEventHandler" msprop:Generator_RowDeletedName="DoctorsRowDeleted" msprop:Generator_UserTableName="Doctors" msprop:Generator_RowChangedName="DoctorsRowChanged" msprop:Generator_RowEvArgName="DoctorsRowChangeEvent" msprop:Generator_RowClassName="DoctorsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Doctor_Name" msprop:Generator_ColumnVarNameInTable="columnDoctor_Name" msprop:Generator_ColumnPropNameInRow="Doctor_Name" msprop:Generator_ColumnPropNameInTable="Doctor_NameColumn" msprop:Generator_UserColumnName="Doctor_Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Specialisty" msprop:Generator_ColumnVarNameInTable="columnSpecialisty" msprop:Generator_ColumnPropNameInRow="Specialisty" msprop:Generator_ColumnPropNameInTable="SpecialistyColumn" msprop:Generator_UserColumnName="Specialisty" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Doctors" />
      <xs:field xpath="mstns:Doctor_Name" />
    </xs:unique>
  </xs:element>
</xs:schema>